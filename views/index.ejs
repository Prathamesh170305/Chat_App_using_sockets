<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h1>chat</h1>
    <input id="startchat" type="hidden" data-roomid='<%=id %>'></input>
    <input type="text" id="username" placeholder="username..">
    <input type="text" id="newmsg" placeholder="message...">
    <span id="typing">typing..</span>
    <button id="btn">send</button>

    <ul id="msglist">
        <% for (let i=0;i<chats.length;i++) { %>
            <li><%= chats[i].user %>:<%= chats[i].content  %></li>
        <% } %>
    </ul>



    <script src="/socket.io/socket.io.js"></script>
    <script>
        let receivetyping=null;
        let typingId=null;

        const socket = io();
        const startchat = document.getElementById('startchat');
        const btn = document.getElementById('btn');
        const username = document.getElementById('username');
        const inputMsg = document.getElementById('newmsg');
        const msgList = document.getElementById('msglist');
        const spanTyping=document.getElementById('typing')
        spanTyping.style.display="none";
    
        const roomid = startchat.getAttribute('data-roomid');
    
        
        socket.emit('join_room', {
            roomid: roomid
        });
    
        btn.onclick = function () {
            const message = inputMsg.value.trim();
            const user = username.value.trim();
    
            if (message && user) {
                socket.emit('msg_send', {
                    msg: message,
                    username: user,
                    roomid: roomid
                });
                inputMsg.value = ""; // Clear the message input
            }
        };
    
        socket.on('msg_rcvd', (data) => {
            if (data && data.username && data.msg) {
                const limsg = document.createElement('li');
                limsg.innerText = `${data.username}: ${data.msg}`;
                msgList.appendChild(limsg);
            }
        });

        socket.on('someone_typing',(data)=>{
            spanTyping.style.display="block";
            clearTimeout(receivetyping);
            receivetyping=setTimeout(()=>{
                spanTyping.style.display='none';
            },1000);
        })

        inputMsg.addEventListener('keypress',function(e){
       
            socket.emit('typing',{
                roomid:startchat.getAttribute('data-roomid'),
            });
            clearTimeout(typingId);
            typingId=setTimeout(()=>{
                spanTyping.style.display='none';
            },1000);
        })

    </script>
    
</body>

</html>